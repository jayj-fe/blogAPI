{"postlist":[{"title":"React 프레임워크 - Next.js","author":"Jay.J","date":"2023-09-12T00:00:00.000Z","categories":["javascript","ReactJs","NextJs"],"tags":["javascript","ReactJs","NextJs"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/nextjs.png","url":"/post/2023-09-12-NextJs","con":"---\r\n\r\n<br>\r\n\r\nNext.js는 React 라이브러리의 프레임워크이다.<br>\r\nPre-Rendering, 서버 사이드 렌더링(Server Side Rendering - SSR), App Router, Code Splitting  같은 다양하고 풍부한 기능을 제공한다.<br>\r\n<br>\r\nReact는 클라이언트 사이드 렌더링(Client Side Rendering - CSR)으로 Search Engine Optimization(SEO)의 대응이 미흡하다.<br>\r\n그래서 <b>SEO를 대응하기 위해서 SSR 을 지원하는 Next.js를 사용</b>한다고 많은 포스트에서 작성하고 있다.\r\n\r\n## Next.js가 제공하는 기능들.\r\n\r\n### Pre-Rendering\r\n\r\n기본적으로 Next.js는 Static-Site Generate(SSG)와 Server Side Rendering(SSR)을 제공한다.<br>\r\n<br>\r\n두 가지 렌더링 호출 방식의 공통점은 <b>HTM"},{"title":"React_MUI","author":"Jay.J","date":"2023-07-10T00:00:00.000Z","categories":["javascript","ReactJs","MUI","css"],"tags":["javascript","ReactJs","MUI","css"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/mui.png","url":"/post/2023-07-10-React_MUI","con":"---\r\n\r\n<br>\r\n\r\n## MUI란\r\nMUI(Material UI)는 Material Design을 구현해놓은 라이브러리이다.<br>\r\n이 라이브러리를 이용하면 material 디자인 스타일이 적용된 UI를 매우 쉽게 구현할 수 있다. <br>\r\n<br>\r\n\r\n### Material Design이란?\r\n구글은 모바일과 데스크탑 그리고 그 외 다양한 디바이스들을 아우르는 하나의 일관된 디자인 가이드라인을 공개하였는데, 이것이 바로 <b>Material Design</b>이다.<br>\r\n<br>\r\n머티리얼 디자인은 질감이 느껴지는 표면 (tactile surfaces) 과 대담하고 선명한 그래픽 디자인 (bold graphic design), 그리고 아름답고 직관적인 사용자 경험을 위한 자연스러운 애니메이션을 특징으로 한다.\r\n\r\n<br>\r\n\r\n## MUI 설치하기\r\nMUI는 npm, yarn 등으로 설치할 수 있다.\r\n\r\n```js\r\n// npm\r\nnpm install @mui/"},{"title":"React란?","author":"Jay.J","date":"2023-03-07T00:00:00.000Z","categories":["javascript","ReactJs"],"tags":["javascript","ReactJs"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/react.png","url":"/post/2023-03-07-Reactjs","con":"---\r\n\r\n<br>\r\n\r\n## React.js 란 무엇인가?\r\nReact.js의 공식문서에서는 <b>'사용자 인터페이스를 만들기 위한 JavaScript 라이브러리'</b> 라고 설명하고 있다.<br>\r\n즉, 보여지는 화면을 만드는 자바스크립트 프레임워크 중의 하나이다.<br>\r\n\r\n> <a href=\"https://ko.legacy.reactjs.org/\" target=\"_blank\">React.js 공식사이트</a>\r\n\r\n<br>\r\n\r\n## 장점 및 특징\r\n1. Component 기반 구조\r\n2. Data Flow\r\n3. Virtual Dom\r\n4. JSX\r\n\r\n<Br>\r\n\r\n### Component 기반 구조\r\n\r\nVue.js 에서 한번 설명했던 구조이다.<br>\r\nDOM을 작은 단위로 쪼개어 개발하는 방식으로 유지보수와 재사용성이 높다.<br>\r\n<br>\r\n작은 단위로 쪼개져 있는 Dom 하나를 Component라 부르며, 독립된 Component들을 조립해 화면을 구성한다"}]}