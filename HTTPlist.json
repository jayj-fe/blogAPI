{"postlist":[{"title":"SSR(서버사이드 렌더링)과 CSR(클라이언트 사이드 렌더링)","author":"Jay.J","date":"2021-06-26T00:00:00.000Z","categories":["HTTP"],"tags":["HTTP"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/http.png","url":"/post/2021-06-26-SSR","con":"---\n\n## SSR\n\n인터넷을 사용하다 보면 내가 검색했던 키워드나 정보에 관련된 광고만 눈에 보인 적이 있을 것이다.<br>\n이는 기업에서 우리의 행동 정보를 저장하고 분석하여 활용하고 있기 때문이다.<br>\n> 개인 맞춤 광고를 하다보니 사생활 논란이 있어 현재는 개인 맞춤 광고는 중지 계획을 가지고 있다.<br>\n> \"2021년 3월 3일 - 내년 4월까지 자사 웹브라우저 크롬 사용자의 개인 정보가 담긴 ‘쿠키(사용자가 특정 웹사이트에 접속할 때 자동으로 생성되는 파일)’를 분석하는 사업을 완전히 중단\"\n\n즉, <b style=\"color:blue\">트래킹은 사용자의 행동 데이터를 수치로 나타내기 위해서 데이터를 수집하여 데이터 베이스에 저장하는 것</b>이다.<br>\n\n<br>\n\n## 트래킹 분석\n\n저장된 정보를 가지고 웹 사이트 관리자는 웹 분석을 한다.<br>\n분석을 통하여 사람들이 사이트를 사용하는 방법, 사람들이 좋아하는 것과 싫어하는 것, 방문자가 어디에서 왔는지,"},{"title":"웹 추적 기술 - 웹 트래킹(Tracking)","author":"Jay.J","date":"2021-06-05T00:00:00.000Z","categories":["HTTP"],"tags":["HTTP"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/http.png","url":"/post/2021-06-05-Tracking","con":"---\n\n## 트래킹(Tracking)\n\n인터넷을 사용하다 보면 내가 검색했던 키워드나 정보에 관련된 광고만 눈에 보인 적이 있을 것이다.<br>\n이는 기업에서 우리의 행동 정보를 저장하고 분석하여 활용하고 있기 때문이다.<br>\n> 개인 맞춤 광고를 하다보니 사생활 논란이 있어 현재는 개인 맞춤 광고는 중지 계획을 가지고 있다.<br>\n> \"2021년 3월 3일 - 내년 4월까지 자사 웹브라우저 크롬 사용자의 개인 정보가 담긴 ‘쿠키(사용자가 특정 웹사이트에 접속할 때 자동으로 생성되는 파일)’를 분석하는 사업을 완전히 중단\"\n\n즉, <b style=\"color:blue\">트래킹은 사용자의 행동 데이터를 수치로 나타내기 위해서 데이터를 수집하여 데이터 베이스에 저장하는 것</b>이다.<br>\n\n<br>\n\n## 트래킹 분석\n\n저장된 정보를 가지고 웹 사이트 관리자는 웹 분석을 한다.<br>\n분석을 통하여 사람들이 사이트를 사용하는 방법, 사람들이 좋아하는 것과 싫어하는 것, 방문자가"},{"title":"Cookie와 Session의 차이는 무엇일까","author":"Jay.J","date":"2021-05-23T00:00:00.000Z","categories":["HTTP"],"tags":["javascript","HTTP"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/http.png","url":"/post/2021-05-23-CookieVsSeccion","con":"---\n\n## 쿠키(Cookie)\n\n사용자가 어떠한 웹 사이트를 방문할 경우 사용자의 컴퓨터에 저장하는 작은 기록 정보 파일이다.<br>\n사용자가 따로 요청하지 않아도 브라우저가 Request시에 Request Header를 넣어서 자동으로 서버에 전송한다.<br>\n사용자의 상태 정보를 로컬에 저장했다가 필요시 정보를 참조하거나 재사용 한다.<br>\n사용자 인증이 유효한 시간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 인증이 유지된다는 특징이 있다.\n\n### 쿠키의 구성 요소\n\n- 이름 : 각각의 쿠키를 구별하는 데 사용되는 이름\n- 값 : 쿠키의 이름과 관련된 값\n- 유효시간 : 쿠키의 유지시간\n- 도메인 : 쿠키를 전송할 도메인\n- 경로 : 쿠키를 전송할 요청 경로\n\n### 쿠키 특징\n\n- 이름, 값, 만료일(저장 기간 설정), 경로 정보로 구성되어 있다.\n- 사용자마다 총 300개의 쿠키를 저장할 수 있다.\n- 하나의 도메인 당 20개의 쿠키를 가질 수 있"},{"title":"RESTful API 이란","author":"Jay.J","date":"2021-05-15T00:00:00.000Z","categories":["HTTP"],"tags":["HTTP"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/restapi.png","url":"/post/2021-05-15-RESTfulAPI","con":"---\n\n## RESTful API란?\n\nREST를 기반 API를 의미합니다.<br>\nREST은 무엇인지, REST API는 무엇인지, RESTful API는 무엇인지 알아보려고합니다.\n\n<br>\n<hr>\n<br>\n\n## 1. RESTful API에서 REST 란?\n\nREST는 <span style=\"color:blue\">Representational State Transfer</span>의 약자로써 풀어서 설명하자면<br>\n<span style=\"color:red\">자원을 이름으로 구분해 해당 자원의 상태를 주고 받는 것</span>을 말한다.<br>\n<br>\n<b>웹에 존재하는 자원(이미지, 동영상, DB)에 대한 CRUD 요청을,<br>\n고유한 URI(Resource와 Method)로 표현하여 특정한 형태로 전달하는 방법이다.</b>\n> <b> CRUD : Create, Read, Update, Delete </b> <Br>\n> - Create : 데이터 생성(POST)<br>"},{"title":"GET과 POST 방식","author":"Jay.J","date":"2020-09-28T00:00:00.000Z","categories":["HTTP"],"tags":["HTTP"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/http.png","url":"/post/2020-09-28-GetAndPost","con":"---\n\n웹 브라우저로 어떤 사이트에 접속한다고 했을 때, 사용자는 URL을 입력하여 접근한다.<br>\nHTTP 프로토콜을 통하여 사용자는 요청을 보내고 서버는 그 요청에 맞게 응답한다.<br>\n그리고 그 요청의 방식에는 크게 2가지 방식이 있고 그것이 바로 GET방식과 POST방식이다\n\n<br>\n\n## GET\n\nGET 방식은 서버로부터 어떠한 정보를 조회하기 위해서 사용되는 방식이다.<br>\nGET은 서버에게 요청할 때 URL에 요청을 담아 보낸다. <br>\nURL의 끝에 ? 를 통하여 요청을 하는데 요청의 파라미터가 여러 개일 경우 &을 이용하여 요청한다.<br>\n\n```\nwww.test.com/test?id=value&id2=value2&id3=value3\n```\n\n요청의 파라미터는 키와 값의 형식으로 보낸다.<br>\n위에 적은 url에서 키는 id이며, 값은 value으로 이루어진 문자열이다.<br>\n<br>\n이러한 방식의 요청은 URL에 변수를 보내줘야 하고, 어떤 정보를 "},{"title":"HTTP 와 HTTPS, Status Code","author":"Jay.J","date":"2018-11-18T00:00:00.000Z","categories":["HTTP"],"tags":["HTTP"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/httphttps.jpg","url":"/post/2018-11-18-HTTP_HTTPS_Status_Code","con":"---\r\n\r\n## HTTP 와 HTTPS 란  \r\n  \r\n인터넷을 사용하다보면 HTTP와 HTTPS로 시작되는 주소를 볼 수 있다.    \r\n어떤 차이가 있어서 HTTP와 HTTPS를 나눠서 쓰는지 알아보려고 한다.  \r\n\r\n<br>\r\n\r\n### HTTP\r\nHTTP는 <b>Hyper Text Transfer Protocol</b>의 약자로  \r\nWorld Wide Web에서 사용되는 기본 프로토콜이며 이 프로토콜은 메시지가 형식화되고  \r\n전송되는 방법과 다양한 명령에 대한 응답으로 <b>웹 서버와 브라우저가 수행해야하는 작업을 정의</b>한다.  \r\n<br>\r\n  \r\n### HTTPS\r\nHTTPS는 <b>Hyper Text Transfer Protocol over Secure sockets layter</b>의 약자이다.  \r\n기존의 HTTP는 보안장치 없이 그대로 정보를 전송하기에 보안에 취약하다.  \r\n그 보안에 취약한 문제를 해결하고자 HTTP에 secure sockets l"}]}