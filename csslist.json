{"postlist":[{"title":"Box Model","author":"Jay.J","date":"2022-05-24T00:00:00.000Z","categories":["html","css"],"tags":["html","css"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/html.png","url":"/post/2022-05-24-BoxModel","con":"---\n\n<br>\n\n## Box Model이란?\n\n모든 HTML 요소는 박스(box) 모양으로 구성되며, 이것을 박스 모델(box model)이라고 부른다.\n박스 모델은 HTML 요소를 패딩(padding), 테두리(border), 마진(margin), 그리고 내용(content)으로 구분한다.\n\n<br>\n\n## 웹 브라우저에서의 Box Model은?\n\n웹 브라우저에서의 Box Model은 content-box 와 border-box 기준이 있다.\ncontent-box는 콘텐츠 영역을 기준으로 크기를 정하며 border-box는 테두리 영역을 기준으로 크기를 정한다.\nCSS의 속성을 통하여 Box Model의 기준을 정할 수 있다.\n\n<br>\n\n## CSS 문법\n\n```css\nbox-sizing: content-box | border-box | initial | inherit\n```\n<br>\n\n- content-box : 콘텐트 영역을 기준으로 크기를 정한다\n- border-box "},{"title":"CSS의 BEM을 사용해보자","author":"Jay.J","date":"2022-04-12T00:00:00.000Z","categories":["css"],"tags":["css"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/css.png","url":"/post/2022-04-12-BEM","con":"---\n\n<br>\n\n## BEM이란?\n\nBEM은 CSS 네이밍 방법론 중 하나이다.<br>\nHTML의 요소를 <b>Block</b>, <b>Element</b>, <b>Modifier</b> 세가지로 구분하여 클래스명을 작명하는 방법이다.\n\n<br>\n\n## BEM의 장점\n\n- 목적과 기능을 직관적으로 알 수 있다.\n- 재사용성이 높다.\n- CSS만으로 구조를 알 수 있다.\n\n<br>\n\n## Block\n\n### 의미\nBlock 은 단독으로 사용할 수 있는 <b>독립적인 요소</b>이다.<br>\n<b>재사용성이 가능</b>하고 높은 요소이다.<br>\n재사용을 위해서 Block 요소에는 <b>Padding과 Margin 속성을 적용하지 않는다.</b>\n\n### HTML 구조\n\n```\n*** HTML ***\n\n<header>\n    <div>\n        Logo\n    </div>\n\n    <nav>\n        Navigater\n    </nav>\n</header>\n```\n> 위 소"},{"title":"CSS Flex","author":"Jay.J","date":"2022-03-02T00:00:00.000Z","categories":["css"],"tags":["css"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/css.png","url":"/post/2022-03-02-flex","con":"---\n\n<br>\n\nflex 는 레이아웃 구조를 잡을 수 있는 CSS 속성 중 하나이다.<br>\n컨테이너가 차지하는 공간에 맞춰서 아이템들이 유연하게 조절되기 때문에 레이아웃을 보다 쉽게 구현할 수 있다.<br>\n<br>\nInternet Explorer(이하 IE) 점유율이 높고 하위 버전까지 맞춰야 할 예전에는 하위 버전까지 지원하지 않아 잘 사용되지않았지만,<br> 현재 IE의 점유율이 낮아지면서 너무 낮은 버전의 IE 브라우저는 안맞추는 추세로 프로젝트가 진행되면서 많이 사용되었다.\n\n\n## 구성\n\n<img src=\"/assets/img/css/flex_container.png\" alt=\"\">\n\nflex는 부모 요소인 flex container과 자식 요소인 flex item으로 구성되어 있다.\n\n```\n*** HTML *** \n<div class=\"flex_container\">\n    <div class=\"flex_item\">Item 1</div>\n    <div class="},{"title":"Sass & SCSS 란?","author":"Jay.J","date":"2019-08-31T00:00:00.000Z","categories":["css"],"tags":["sass","scss","css"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/sass.png","url":"/post/2019-08-31-whatIsSass","con":"---\r\n\r\n<br>\r\n\r\n## &nbsp;\r\n\r\n최근 프론트쪽을 담당하는 직군의 기술 스택을 보면 Sass를 심심찮게 볼 수 있습니다.\r\n그래서 Sass는 무엇인가에 대해서 알아보려고 합니다.\r\n\r\n> 본 글에서는 Sass에 대해서만 알아보며, 문법과 컴파일 방법에 대해서는 다루지 않습니다.\r\n\r\n<br>\r\n\r\n## Sass 란?\r\nSass는 Syntactically Awesome Style Sheets의 약자이며,\r\nCSS를 우리가 조금 더 편하게 사용하기 위해 확장한 언어입니다.\r\n그러나 웹에서는 CSS만 직접 동작하기 때문에 Sass는 웹에서 사용하기 위해서는 컴파일을 해주어야 합니다.\r\n그러기에 Sass는 <b>CSS Preprocessor(CSS 전처리기)</b>라고 불립니다. \r\n> 전처리기 란?\r\n> 프로그램을 만들 때 소스파일 > 전처리기 -> 컴파일러 ->  실행파일 순으로 실행되는데,\r\n> <b>전처리기(Preprocessor)</b>는 소스 코딩을 한 후 컴파일"}]}