{"postlist":[{"title":"CodeIgniter에 Vue 도입하기","author":"Jay.J","date":"2021-11-20T00:00:00.000Z","categories":["VueJs"],"tags":["javascript","vue.js"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/vuejs.png","url":"/post/2021-11-20-VueInCI","con":"---\n\n<br>\n\n## CodeIgniter에 Vue 도입하기\n\n업계에서 Javascript의 프레임워크를 많이 사용하고 있어, 개인의 발전과 회사의 발전을 위해서 Vue.js를 도입해보기로 했다.<br>\n이 포스터에서는 PHP Codeigniter 기반의 환경인 Codeigniter(이하 코드이그나이터)에서 Vue를 적용시키면서 고민했던 점과 어려웠던 점을 포스팅하고자 한다.<br>\n\n<br>\n\n## 1. 코드이그나이터 환경내에 Vue 프로젝트 시작하기\n\n코드이그나이터 환경에서 Vue 프로젝트 시작하는 방법은 기존 Vue 프로젝트 시작하는 방법과 다르지 않다.<br>\n코드이그나이터 Root 폴더에서 Vue프로젝트를 생성하면 된다.<br>\n\n> Vue 생성 방법은 본 포스터에선 다루지 않는다.<br>\n> <a href=\"/blog/posts/2021-03-14-VueCLI\">Vue 프로젝트 생성하기</a>\n\n#### root폴더\n\n<img src=\"/assets/img/vue/vu"},{"title":"통신을 위한 라이브러리, Axios","author":"Jay.J","date":"2021-05-02T00:00:00.000Z","categories":["VueJs","axios"],"tags":["javascript","axios","HTTP"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/axios.png","url":"/post/2021-05-01-Axios","con":"---\n\n<br>\n\n## &nbsp;\n\n<b>\"Axios는 브라우저, Node.js를 위한 Promise API를 활용하는 HTTP 비동기 통신 라이브러리입니다.\"</b><br>\n<br>\nAxios 공식문서에 나와 있는 Axios의 정의이다.<br>\n자바스크립트의 Fetch API와 비슷한 기능을 가지고 있다.\n\n## axios vs fetch\n\n<div class=\"table-wrapper\">\n  <table>\n    <tr>\n      <td>요청 객체에 URL을 가지고 있다.</td>\n      <td>요청 개체에 URL이 없다 .</td>\n    </tr>\n    <tr>\n      <td>쉽게 설치할 수 있는 독립 실행형 타사 패키지 이다.</td>\n      <td>대부분의 최신 브라우저에 내장되어 있다.<br>설치가 필요 없다.</td>\n    </tr>\n    <tr>\n      <td>내장된 XSRF 보호 기능 있다.</td>\n      <td>별도 보호 없다.</t"},{"title":"Vue Lifecycle 이해하기","author":"Jay.J","date":"2021-04-28T00:00:00.000Z","categories":["VueJs"],"tags":["javascript","vue.js","VueLifecycle"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/vuejs.png","url":"/post/2021-04-24-VueLifecycle","con":"---\n\n<br>\n\n## Vue Lifecycle 이해하기\n\n모든 Vue 앱은 Vue 함수로 새 Vue 인스턴스를 만드는 것부터 시작한다.\n\n```js\nvar vm = new Vue({\n  // 옵션\n})\n```\n\nVue 인스턴스는 생성될 때, 일련의 초기화 단계를 거친다.<br>\n예를들어 아래와 같은 경우가 있다.\n\n- 데이터 관찰 설정이 필요한 경우\n- 템플릿을 컴파일 하는 경우\n- 인스턴스를 DOM에 마운트하는 경우\n- 데이터가 변경되어 DOM을 업데이트 하는 경우\n\n<br>\n\n## 이미지로 보는 라이프 사이클\n\n<img src=\"/assets/img/vue/vue_lifecycle.png\" alt=\"\">\n\n<br>\n\n## 1. Create 단계\n라이프 사이클 훅에서 제일 처음 실행되는 Create 단계이다.<br>\nDOM이 생성되기 이전에 실행되는 훅으로써 DOM에 접근하거나 this.$el 을 사용하지 못한다.<br>\n<br>\n이 단계는 <b style=\"color:#197"},{"title":"Vuex가 무엇인가?","author":"Jay.J","date":"2021-04-18T00:00:00.000Z","categories":["VueJs"],"tags":["javascript","vue.js","Vuex"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/vuejs.png","url":"/post/2021-04-18-Vuex","con":"---\n\n<br>\n\n## Vuex가 무엇인가?\n\nVue.js에 대한 상태 관리 패턴이자 라이브러리이다.<br>\n모든 컴포넌트에 대한 중앙 집중식 저장소 역할을 하며 예측 가능한 방식으로 상태를 변경할 수 있다.\n\n<br>\n\n## 상태 관리란?\n\n간단한 Vue 코드로 확인해보겠다.\n\n```js\nnew Vue({\n  // 상태\n  data () {\n    return {\n      count : 0\n    }\n  },\n  // 뷰\n  template : `\n    <div> {{ count }} </div>\n  `,\n  // 액션\n  methods: {\n    increment () {\n      this.count++\n    }\n  }\n})\n```\n\n- 상태(State) : 앱을 작동하는 소스이다.\n- 뷰(View) : 상태를 보여주는 매핑이다.\n- 액션(Actions) : 사용자 입력에 대해 반응적으로 대응한다.\n\n<img src=\"/assets/img/vue/vuex_flow.pn"},{"title":"Vue Router 사용하기","author":"Jay.J","date":"2021-04-10T00:00:00.000Z","categories":["VueJs"],"tags":["javascript","vue.js","vue Router"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/vuejs.png","url":"/post/2021-04-10-VueRouter","con":"---\n\n<br>\n\n## Vue Router 란\n\n'Vue 라우터는 Vue.js (opens new window)의 공식 라우터이며,<br>\nVue.js를 사용한 싱글 페이지 앱(SPA)을 쉽게 만들 수 있도록 Vue.js의 코어와 긴밀히 통합되어 있다.'<br>\n라고 공식문서에 설명되어있다.<br>\n<br>\n싱글 페이지 앱(SPA)는 최초에 한번 페이지를 로드하고 이후부터는 특정 부분만 변경하여 페이지를 보여주는 방식이다.<br>\n<br>\n기존의 웹 서비스는 서버로부터 데이터가 변경 및 페이지를 이동 할 때 화면 전체를 렌더링 하는 방식이였다.<br>\nSPA를 사용함으로써 전체 페이지를 렌더링하는데 드는 오버헤드가 줄어들어 앱의 속도가 향상되어 더 빠른 속도를 사용자에게 제공할 수 있다.<br>\n<br>\n즉, Vue Router를 사용하면 <b>싱글 페이지 앱(SPA)을 만드는 데 필요한 URL 이동 및 특정 부분의 변경</b>을 간단히 구현할 수 있다.<br>\n\n<br>\n\n## "},{"title":"Vue-CLI","author":"Jay.J","date":"2021-03-14T00:00:00.000Z","categories":["VueJs"],"tags":["javascript","vue.js"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/vuejs.png","url":"/post/2021-03-14-VueCLI","con":"---\n\n<br>\n\n## Vue-CLI 란\n\nVue CLI은 Vue.js의 개발 환경을 쉽고 빠르게 구축할 수 있도록 도와주는 도구이다.<br>\ncli를 이용하면, 짧은 시간내에 프로젝트의 환경을 설정할 수 있다.<br>\n사용자가 조금 더 개발에 집중할 수 있도록 도와준다.\n> CLI란 Command Line Interface의 약자로 터미널을 통해 사용자와 컴퓨터가 상호 작용하는 방식을 뜻한다.<br>\n> 즉, 작업 명령은 사용자가 툴바 키보드 등을 통해 문자열의 형태로 입력하며, 컴퓨터로부터의 출력 역시 문자열의 형태로 주어진다. - <a href=\"https://ko.wikipedia.org/wiki/%EB%AA%85%EB%A0%B9_%EC%A4%84_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" target=\"_blank\">위키백과</a>\n\n<br>\n\n## Vue CLI 구성요소\n\nVue CLI는 여러 패키지로 이루어져 있다.<br>\n그 "},{"title":"Vue.js란","author":"Jay.J","date":"2021-03-05T00:00:00.000Z","categories":["VueJs"],"tags":["javascript","vue.js"],"math":"true","mermaid":"true","img":"/blogAPI/assets/img/vuejs.png","url":"/post/2021-03-05-whatIsVue.js","con":"---\n\n<br>\n\n## Vue.js 란 무엇인가?\n\nVue.js의 공식문서에서는 <b>'사용자 인터페이스를 만들기 위한 프로그레시브 프레임워크'</b> 라고 설명하고 있다.<br>\n즉, 보여지는 화면을 만드는 자바스크립트 프레임워크 중의 하나이다.<br>\nVue.js는 진입장벽이 낮으며 쉽고 빠르게 개발을 할 수 있다는 것이 가장 큰 장점으로 가지고 있다.<br>\n\n> <a href=\"https://kr.vuejs.org/v2/guide/index.html\" target=\"_blank\">Vue.js 공식사이트</a>\n\n<br>\n\n## 장점 및 특징\n\n### 학습곡선이 낮다.\n\nVue.js는 웹 개발을 단순화하고 정리하기 위해 개발된 대중적인 자바스크립트 프론트엔드 프레임워크이다.<br>\n수많은 프로젝트에서 AngularJS를 사용하여 구글을 위해 작업하던 Evan You에 의해 개발되었다.<br>\n웹 UI 개발(컴포넌트, 선언형 UI, 핫 리로딩, 타임 트래블 디버깅 등)의 아이디"}]}